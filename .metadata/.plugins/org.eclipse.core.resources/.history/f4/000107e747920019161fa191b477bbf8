package product;

import javax.swing.table.DefaultTableModel;

import connection.Connections;

import java.sql.*;

public class CRUD_Product {

	Connections ConnectDB = new Connections();
	
	public void findAll(DefaultTableModel model) {
		try {
			PreparedStatement ps = ConnectDB.getConnection().prepareStatement("select * from product");
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				String[] row= new String[6];
				row[0]= rs.getInt(1)+"";
				row[1]= rs.getString(2);
				row[2]= rs.getString("Supplier");
				row[3]= rs.getDouble("Sale")+"";
				row[4]= rs.getDouble("Buy")+"";
				row[5]= rs.getString("Stock");
				model.addRow(row);
			}
			
		} catch (Exception e) {
			System.out.println(e);
		}
		
	}
	
	public Product find(int id) {
		try {
			Product p = new Product();
			PreparedStatement ps = ConnectDB.getConnection().prepareStatement("select * from product where id = ?");
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				String[] row= new String[6];
				row[0]= rs.getInt(1)+"";
				row[1]= rs.getString(2);
				row[2]= rs.getString("Supplier");
				row[3]= rs.getDouble("Sale")+"";
				row[4]= rs.getDouble("Buy")+"";
				row[5]= rs.getString("Stock");
			}
			return p;
		} catch (Exception e) {
			return null;
		}
		
	}
	
	public int create (Product p) {
		int effectedRow=0;
		try {
			PreparedStatement ps = ConnectDB.getConnection().prepareStatement("insert into product(Name, Supplier, Sale, Buy, Stock) values(?,?,?,?,?)");
			ps.setString(1, p.getName());
			ps.setString(2, p.getSupplier());
			ps.setDouble(3, p.getSale());
			ps.setDouble(4, p.getBuy());
			ps.setString(5, p.getStock());
			effectedRow=ps.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);;
		}
		return effectedRow;
	}

	public boolean edit (Product p) {
		try {
			PreparedStatement ps = ConnectDB.getConnection().prepareStatement("update product set Name=?, Spplier=?, Sale=?, Buy=?, Stock=? where ID=?");
			ps.setString(1, p.getName());
			ps.setString(2, p.getSupplier());
			ps.setDouble(3, p.getSale());
			ps.setDouble(4, p.getBuy());
			ps.setString(5, p.getStock());
			ps.setInt(6, p.getId());
			return ps.executeUpdate() > 0;
		} catch (Exception e) {
			return false;
		}
	}
	
	public boolean delete (Product p) {
		try {
			PreparedStatement ps = ConnectDB.getConnection().prepareStatement("delete from product where ID=? ");
			ps.setInt(1, p.getId());
			return ps.executeUpdate() > 0;
		} catch (Exception e) {
			return false;
		}
	}
}
